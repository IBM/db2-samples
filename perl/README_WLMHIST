******************************************************************************
* (c) Copyright IBM Corp. 2007 All rights reserved.
* 
* The following sample of source code called the WLM Historical Analysis 
* sample tool ("Sample") is owned by International Business Machines 
* Corporation or one of its subsidiaries ("IBM") and is 
* copyrighted and licensed, not sold. You may use, copy, modify, and 
* distribute the Sample in any form without payment to IBM, for the purpose of 
* assisting you in the development of your applications.
* 
* The Sample code is provided to you on an "AS IS" basis, without warranty of 
* any kind. IBM HEREBY EXPRESSLY DISCLAIMS ALL WARRANTIES, EITHER EXPRESS OR 
* IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
* MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. Some jurisdictions do 
* not allow for the exclusion or limitation of implied warranties, so the above 
* limitations or exclusions may not apply to you. IBM shall not be liable for 
* any damages you suffer as a result of using, copying, modifying or 
* distributing the Sample, even if IBM has been advised of the possibility of 
* such damages.
*
******************************************************************************
*
*    README for Workload Management (WLM) Historical Analysis Sample Tool
*
* The <install path>sqllib\samples\perl directory contains this README file
* where <install_path> is the location of DB2 9.7 on your hard drive. The
* default location for <install_path> is C:\Program Files\IBM on Windows and
* $HOME on unix
*
* This README describes the WLM Historical Analysis sample tool.  
* The WLM Historical Analysis sample tool generates reports using data 
* collected from the DB2 WLM monitoring functionality.  These reports 
* are similar to the reports generated by one of the popular features 
* of Query Patroller, the historical analysis tool, which generates 
* historical data and reports on whether certain tables, indexes and 
* columns are being used and by which submitters.
*
* The WLM Historical Analysis sample tool, wlmhist, mainly comprises of
* 2 scripts and 1 perl module:
* 1. wlmhist.pl : A script to generate historical data for the reports
* 2. wlmhistrep.pl: A script to produce reports from the historical data.
* 3. DB2WlmHist.pm: Common perl routines used by the 2 scripts.
* 
* Generation of the reports is a two step process, using these scripts.
* This is similar to the Query Patroller tool, which also requires 2 steps.
*
* The WLM Historical Analysis sample tool files are located
* in the following directory:
*
*  Windows:
*    <install_path>\sqllib\samples\perl
*  Unix:
*    <install_path>/sqllib/samples/perl
*
* Copy the sample files from this directory to a working directory prior to
* running the sample programs. The sample program directories are typically
* read-only on most platforms and some samples produce output files that
* require write permission on the directory.
*
* WARNING: This sample tool will create database objects and requires 
*          alteration of some workload management objects (for example,
*          service classes).  Execute the tool against a test database
*          first, such as the DB2 SAMPLE database to ensure you understand
*          how the tool works and the effects. 
*
******************************************************************************
*
*   Prepare your WLM Historical Analysis Sample Tool environment
*
*  1) Copy the files in <install path>sqllib\samples\perl\*wlmhist* (windows),
*     <install path>sqllib/samples/perl/*wlmhist* (unix) to a working 
*     directory and ensure that directory has write permission.
*
*  2) Copy the file in <install path>sqllib\samples\perl\DB2WlmHist* (windows),
*     <install path>sqllib/samples/perl/DB2WlmHist* (unix) to the same working
*     directory as step 1 and ensure that directory has write permission.
*
*  3) Start the Database Manager with the following command:
*       db2start
*
*  4) Create the sample database with the following command:
*       db2sampl
*
*  5) Test that you can connect to the database with the following command:
*       db2 connect to sample
*
*  6) cd to the directory containing the files copied in Step 1.
*
******************************************************************************
*
*       Steps Before Running the WLM Historical Analysis Sample Tool
*
* 1. In order to generate historical data, you will first have to collect 
* some activity data for the historical data generator to process.  This 
* is done by doing performing the following:
*
*   a. Create a write to table event monitor for activities.  You can 
*   use the wlmevmon.ddl script under sqllib/misc to create a write to 
*   table activity event monitor or use a statement similar to the following:
*
*   CREATE EVENT MONITOR DB2ACTIVITIES FOR ACTIVITIES
*      WRITE TO TABLE
*      ACTIVITY (TABLE ACTIVITY_DB2ACTIVITIES
*                IN USERSPACE1
*                PCTDEACTIVATE 99),
*      ACTIVITYSTMT (TABLE ACTIVITYSTMT_DB2ACTIVITIES
*                    IN USERSPACE1
*                    PCTDEACTIVATE 99),
*      ACTIVITYVALS (TABLE ACTIVITYVALS_DB2ACTIVITIES
*                    IN USERSPACE1
*                    PCTDEACTIVATE 99),
*      CONTROL (TABLE CONTROL_DB2ACTIVITIES
*               IN USERSPACE1
*               PCTDEACTIVATE 99)
*      AUTOSTART
* 
*   b. Turn on the activity event monitor that was created.  For example:
* 
*   SET EVENT MONITOR DB2ACTIVITIES STATE 1
*  
*   c. Enable activity collection by specifying the COLLECT ACTIVITY DATA 
*   clause on the WLM object of interest.  For example, to collect activity 
*   information for all activities that run on the default service subclass 
*   of the default user service super class: 
* 
*   ALTER SERVICE CLASS SYSDEFAULTSUBCLASS UNDER SYSDEFAULTUSERCLASS 
*         COLLECT ACTIVITY DATA ON COORDINATOR WITH DETAILS
*
*   Once the above steps are done, any activity that is run in the service 
*   subclass(es) that has the collect activity data option enabled will have 
*   activity data collected for it. The information that the historical 
*   data generator requires is in the activity and activitystmt event 
*   monitor tables. You can change the names of the tables and must pass the 
*   new names in to the wlmhist.pl script.  The default table names assumed
*   by the tool are ACTIVITY_DB2ACTIVITIES and ACTIVITYSTMT_DB2ACTIVITIES.
*
* 2. In order to run the historical data generator tool, you must make 
* sure the explain tables exist under the schema of the user running the 
* tool. If they do not already exist, create them by going to 
* the sqllib/misc directory and running the following:
* 
* db2 -tvf EXPLAIN.DDL
* 
* 3. Next, it is highly recommended that you disable the collection of 
* activities before running the historical data generator tool.  If you 
* do not do this, any DML activities that are run as a result of the 
* historical data generator may also be captured and put into the DB2
* activity tables, thereby dramatically increasing the number of actual 
* activities that have data generated. For example, to disable the collection
* of activities that run in the default service subclass of the default user 
* service super class, run the following:
* 
*   ALTER SERVICE CLASS SYSDEFAULTSUBCLASS UNDER SYSDEFAULTUSERCLASS 
*         COLLECT ACTIVITY DATA NONE
*
* Although it is not necessary, you can turn off the event monitor for the 
* activities.  For example, to turn off the event monitor that was created 
* in the example earlier in this document, run the following:
*
*  SET EVENT MONITOR DB2ACTIVITIES state 0
*
*
******************************************************************************
*
*       Steps for Running the WLM Historical Analysis Sample Tool
*
* Running the WLM Historical Analysis Sample Tool is a two step process.
*
* 1. Run the historical data generator script, wlmhist.pl, to generate 
* historical data for activities that are captured in the activity event 
* monitor tables.
*
*  perl wlmhist.pl dbname user password [fromTime toTime workloadid
*         serviceClassName serviceSubclassName activityTable activityStmtTable]
*
* Note: The historical data generator (wlmhist.pl) script will only 
*       generate historical data for DML. 
* Note: If you have already run the historical data generator (wlmhist.pl) 
*       script once or more, it is recommended that before running it again,
*       you ensure that the activityTable and activityStmtTable be cleared in
*       order to avoid duplicating data.  If you chose not to clear out these
*       to tables, be sure to use the fromTime and toTime input parameters to
*       ensure you do not generate historical data for activities that have
*       already had data generated for them.
*
* Use - to bypass any optoinal parameters.
*
* 2. Run the historical data report script, wlmhistrep.pl, to generate 
* reports based on the data that was generated in step 1.
*
*  perl wlmhistrep.pl dbAlias userId passwd [outputFile report schemaName 
*         fromTime toTime submitter]
* 
* Use - to bypass optional parameters.
*
* "report" can be any combination from the following letters: 
*    A - Tables Hit 
*    B - Tables Not Hit 
*    C - Indexes Hit 
*    D - Indexes Not Hit 
*    E - Submitters 
*
* If the userId is not the same userId that was used to run the wlmhist.pl 
* when the wlmhist table was created, you must specify the correct schemaName.
*
* The from_time and to_time must be specified in timestamp format.
*   For example 2007-06-06-17.00.00
*
******************************************************************************
*
*          WLM Historical Analysis Sample Tool File Descriptions
* 
* The following are the files for the WLM Historical Analysis Sample 
* Tool included with DB2.
*
*******************************************************************************
*
* The following are the Perl sample files.  For more information, refer
* to the program source files.
*
* wlmhist.pl    - Generates historical data for activities that are captured
*                 in the event_activity and event_activitystmt logical data
*                 groups.  The data that is generated is put into the 
*                 wlmhist table.  This table will be created if it does not    
*                 already exist.
* wlmhistrep.pl - Generates historical analysis reports based on user input
*                 and input from the wlmhist table.
*
******************************************************************************
*
* Common Utility Perl Module
*
* DB2WlmHist.pm  - Defines common functions like prepare and execute SQL
*                  statements and roll back if an error occurs that will be
*                  used for the WLM Historical Analysis Sample Tool scripts.
*
******************************************************************************
*
* Common files
*
* README_WLMHIST   - this file!
*
******************************************************************************


