//***************************************************************************
// (c) Copyright IBM Corp. 2007 All rights reserved.
// 
// The following sample of source code ("Sample") is owned by International 
// Business Machines Corporation or one of its subsidiaries ("IBM") and is 
// copyrighted and licensed, not sold. You may use, copy, modify, and 
// distribute the Sample in any form without payment to IBM, for the purpose of 
// assisting you in the development of your applications.
// 
// The Sample code is provided to you on an "AS IS" basis, without warranty of 
// any kind. IBM HEREBY EXPRESSLY DISCLAIMS ALL WARRANTIES, EITHER EXPRESS OR 
// IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
// MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. Some jurisdictions do 
// not allow for the exclusion or limitation of implied warranties, so the above 
// limitations or exclusions may not apply to you. IBM shall not be liable for 
// any damages you suffer as a result of using, copying, modifying or 
// distributing the Sample, even if IBM has been advised of the possibility of 
// such damages.
//***************************************************************************
//
// SOURCE FILE NAME: DbConnDataSource.sqlj
//
// SAMPLE: How to connect to a database using DataSource with Type 4 driver
//
//         This sample program shows how to connect and access to a database 
//         using a DataSource (registered in a JNDI namespace) in an SQLJ 
//         application using the Universal JDBC Type 4 driver.
//
//         Since no context is specified in the SELECT statement, the default
//         DataSource jdbc/defaultDataSource is used. The DataSource is
//         registered using createRegisterDS.java and DS1.prop. Refer to 
//         the README file for details on how to run this sample. 
//
// SQL Statements USED:
//         SELECT
//
// Classes used from Util.sqlj are:
//         Data
//
// OUTPUT FILE: DbConnDataSource.out (available in the online documentation)
// Output will vary depending on the JDBC driver connectivity used.
//***************************************************************************
//
// For more information on the sample programs, see the README file.
//
// For information on developing JDBC applications, see the Application
// Development Guide.
//
// For information on using SQL statements, see the SQL Reference.
//
// For the latest information on programming, compiling, and running DB2
// applications, visit the DB2 application development website at
//     http://www.software.ibm.com/data/db2/udb/ad
//**************************************************************************/

import java.sql.*;
import sqlj.runtime.*;
import sqlj.runtime.ref.*;

#sql iterator DbConnDataSource_SimplePosIter(String, String);

class DbConnDataSource 
{
  public static void main(String argv[])
  {
    try
    {
      System.out.println();
      System.out.print("THIS SAMPLE SHOWS HOW TO CONNECT AND ACCESS ");
      System.out.println("TO THE SAMPLE DATABASE ");
      System.out.print("USING THE DEFAULT DATASOURCE jdbc/defaultDataSource ");
      System.out.println("WITH TYPE 4 DRIVER.");

      // connect to the 'sample' database
      DefaultContext.getDefaultContext();

      // perform an SQL statement
      DbConnDataSource_SimplePosIter posIter = null;
      String empno = null;
      String firstname = null;

      System.out.println();
      System.out.println(
        "  Perform:\n" +
        "    SELECT empno, firstnme\n" +
        "      FROM employee\n" +
        "      WHERE firstnme like 'MA%'\n");

      #sql posIter = { SELECT empno, firstnme 
                         FROM employee
                         WHERE firstnme like 'MA%' };

      System.out.println(
        "  ** NOTE! **\n" +
        "    Connection is obtained from DataSource: jdbc/defaultDataSource \n");

      System.out.println(
        "  Results:\n" +
        "    EMPNO  FIRSTNME \n" +
        "    ------ ---------- ");

      while (true)
      {
        #sql { FETCH :posIter into :empno, :firstname };
        if (posIter.endFetch()) 
        {
          break;
        }
        System.out.println("    "+Data.format(empno, 6) +
                           " " + Data.format(firstname, 12));
      }      
    }
    catch(Exception ex)
    {
       if (ex instanceof java.sql.SQLException)
       {
         System.out.println("error code: " + 
                            ((java.sql.SQLException)(ex)).getErrorCode());
       }
       ex.printStackTrace();
    }
  }
}
