--# Copyright IBM Corp. All Rights Reserved.
--# SPDX-License-Identifier: Apache-2.0

/*
 * Show pairs of participents from the lock event monitor tables
 * 
 * It is a good idea to query this just for  REQ_ACT = 'CURRENT' AND OWN_ACT = 'CURRENT'
 * as past events (previous, uncommited statements) are cross prducted in this version of the view
 * 
 * I will probably alter this view to only show current statements, and leave db_lock_event_statements to show all the statements involved
 * 
 */

CREATE OR REPLACE VIEW DB_LOCK_EVENT_PAIRS AS
WITH MON_LOCK_PARTICIPANT_ACTIVITIES_DEDUP AS
    (   SELECT
            EVENT_ID, /*EVENT_TIMESTAMP,*/ PARTICIPANT_NO,  MEMBER, PARTITION_KEY
        ,   EFFECTIVE_ISOLATION
        ,   ACTIVITY_TYPE
        ,   STMT_TEXT::VARCHAR(32000 OCTETS) AS STMT_TEXT
        ,   MIN(STMT_FIRST_USE_TIME)  AS STMT_FIRST_USE_TIME
        ,   MAX(STMT_LAST_USE_TIME)   AS STMT_LAST_USE_TIME
        ,   COUNT(*) AS ACTIVITIES
        FROM
            MON_LOCK_PARTICIPANT_ACTIVITIES A
        GROUP BY
            EVENT_ID, /*EVENT_TIMESTAMP,*/ PARTICIPANT_NO,  MEMBER, PARTITION_KEY
        ,   EFFECTIVE_ISOLATION
        ,   ACTIVITY_TYPE
        ,   STMT_TEXT::VARCHAR(32000 OCTETS)
        )
SELECT
    L.EVENT_TIMESTAMP::TIMESTAMP(0) AS EVENT_TIMESTAMP
,   MEMBER
,   L.EVENT_TYPE
--,   COUNT(DISTINCT EVENT_ID) AS EVENTS
--,   COUNT(DISTINCT MEMBER) AS MEMBERS
,   P1.AUTH_ID      AS REQUESTER
,   P1.APPL_NAME    AS REQ_APPL
,   P2.AUTH_ID      AS OWNER
,   P2.APPL_NAME    AS OWN_APPL
,   P1.LOCK_OBJECT_TYPE     AS OBJECT_TYPE
,   CASE P1.LOCK_MODE
          WHEN 0  THEN 'NO LOCK'
          WHEN 1  THEN 'IS'
          WHEN 2  THEN 'IX'
          WHEN 3  THEN 'S'
          WHEN 4  THEN 'SIX'
          WHEN 5  THEN 'X'
          WHEN 6  THEN 'IN'
          WHEN 7  THEN 'Z'
          WHEN 8  THEN 'U'
          WHEN 9  THEN 'NS'
          WHEN 10 THEN 'NX'
          WHEN 11 THEN 'WX'
          WHEN 11 THEN 'NWX'
          ELSE CHAR(P1.LOCK_MODE)
    END AS HELD
,   CASE P1.LOCK_MODE_REQUESTED
        WHEN  0 THEN 'NO LOCK'
        WHEN  1 THEN 'IS'
        WHEN  2 THEN 'IX'
        WHEN  3 THEN 'S'
        WHEN  4 THEN 'SIX'
        WHEN  5 THEN 'X'
        WHEN  6 THEN 'IN'
        WHEN  7 THEN 'Z'
        WHEN  8 THEN 'U'
        WHEN  9 THEN 'NS'
        WHEN  10 THEN 'NX'
        WHEN  11 THEN 'WX'
        WHEN  11 THEN 'NWX'
        ELSE '-1'
    END AS REQ
,   P1.EFFECTIVE_ISOLATION  AS REQ_ISO
,   P2.EFFECTIVE_ISOLATION  AS OWN_ISO
,   COALESCE(P1.TABLE_SCHEMA,P2.TABLE_SCHEMA) SCHEMA
,   COALESCE(P1.TABLE_NAME  ,P2.TABLE_NAME  )   TABLE
--,   P1.PARTICIPANT_NO AS REQ_PNO
--,   P2.PARTICIPANT_NO AS OWN_PNO
,   EVENT_ID
,   P1.ACTIVITY_TYPE AS REQ_ACT
,   P2.ACTIVITY_TYPE AS OWN_ACT
,   P1.STMT_FIRST_USE_TIME  AS REQ_TS
,   P2.STMT_FIRST_USE_TIME  AS OWN_TS
,   P1.STMT_TEXT    AS REQUESTER_STMT
,   P2.STMT_TEXT    AS OWNER_STMT
,   P1.ACTIVITIES   AS REQ_COUNT
,   P2.ACTIVITIES   AS OWN_COUNT
FROM
    MON_LOCK L
LEFT JOIN
    (SELECT P.*
    ,   A.ACTIVITY_TYPE
    ,   A.STMT_TEXT
    ,   A.EFFECTIVE_ISOLATION
    ,   A.STMT_FIRST_USE_TIME
    ,   A.STMT_LAST_USE_TIME
    ,   A.ACTIVITIES
    FROM
         MON_LOCK_PARTICIPANTS  P
    LEFT JOIN 
        MON_LOCK_PARTICIPANT_ACTIVITIES_DEDUP A
    --        ACTIVITIES_DEDUP        A
    USING (EVENT_ID, /*EVENT_TIMESTAMP,*/ PARTICIPANT_NO,  MEMBER, PARTITION_KEY )
    WHERE P.PARTICIPANT_TYPE = 'REQUESTER') P1 
USING
    (EVENT_ID, MEMBER, PARTITION_KEY ) 
LEFT JOIN 
    (SELECT P.* 
    ,   A.ACTIVITY_TYPE
    ,   A.STMT_TEXT
    ,   A.EFFECTIVE_ISOLATION
    ,   A.STMT_FIRST_USE_TIME
    ,   A.STMT_LAST_USE_TIME
    ,   A.ACTIVITIES
    FROM
         MON_LOCK_PARTICIPANTS  P
    LEFT JOIN 
        MON_LOCK_PARTICIPANT_ACTIVITIES_DEDUP A
    --        ACTIVITIES_DEDUP        A
    USING (EVENT_ID, /*EVENT_TIMESTAMP,*/ PARTICIPANT_NO,  MEMBER, PARTITION_KEY )
    WHERE P.PARTICIPANT_TYPE = 'OWNER') P2
USING
    (EVENT_ID, MEMBER, PARTITION_KEY ) 
--WHERE
---        L.EVENT_TIMESTAMP BETWEEN CURRENT_DATE - 1 DAY AND CURRENT_DATE- 0 DAY
---AND     L.EVENT_TYPE NOT IN 'LOCKWAIT'  -- ('DEADLOCK','LOCKTIMEOUT','LOCKWAIT')
 