--# Copyright IBM Corp. All Rights Reserved.
--# SPDX-License-Identifier: Apache-2.0

/*
 * Table activity metrics such as rows read and number of table scans
 */

CREATE OR REPLACE VIEW DB_TABLE_ACTIVITY AS
SELECT
    TABSCHEMA
,   TABNAME    
,   SUM(ROWS_READ)        AS ROWS_READ    
,   SUM(ROWS_INSERTED)    AS ROWS_INSERTED
,   SUM(ROWS_UPDATED)     AS ROWS_UPDATED 
,   SUM(ROWS_DELETED)     AS ROWS_DELETED 
--               With the skew calc below skip the catalog partition and MLN number 1 as that is (usually) where runstats runs
,   DECIMAL((1 - DECFLOAT(NULLIF(AVG(CASE WHEN MEMBER > 1 THEN ROWS_READ     END),0))/ NULLIF(MAX(CASE WHEN MEMBER > 1 THEN ROWS_READ     END),0))*100,5,2) AS ROWS_READ_SKEW
,   DECIMAL((1 - DECFLOAT(NULLIF(AVG(CASE WHEN MEMBER > 1 THEN ROWS_INSERTED END),0))/ NULLIF(MAX(CASE WHEN MEMBER > 1 THEN ROWS_INSERTED END),0))*100,5,2) AS ROWS_INSERTED_SKEW
,   DECIMAL((1 - DECFLOAT(NULLIF(AVG(CASE WHEN MEMBER > 1 THEN ROWS_UPDATED  END),0))/ NULLIF(MAX(CASE WHEN MEMBER > 1 THEN ROWS_UPDATED  END),0))*100,5,2) AS ROWS_UPDATED_SKEW
,   DECIMAL((1 - DECFLOAT(NULLIF(AVG(CASE WHEN MEMBER > 1 THEN ROWS_DELETED  END),0))/ NULLIF(MAX(CASE WHEN MEMBER > 1 THEN ROWS_READ     END),0))*100,5,2) AS ROWS_DELETED_SKEW
,   MAX(CASE WHEN ROWS_READ_RANK = 1 THEN MEMBER END) AS TOP_ROWS_READ_MEMBER
,   SUM(OBJECT_DATA_P_READS + OBJECT_COL_P_READS + OBJECT_XDA_P_READS) AS OBJECT_P_READS
,   SUM(OBJECT_DATA_L_READS + OBJECT_COL_L_READS + OBJECT_XDA_L_READS) AS OBJECT_L_READS
,   DECIMAL(ROUND(100*( 1- ( SUM(OBJECT_DATA_P_READS + OBJECT_COL_P_READS + OBJECT_XDA_P_READS) / NULLIF(SUM(OBJECT_DATA_L_READS + OBJECT_COL_L_READS + OBJECT_XDA_L_READS),0)::DECFLOAT)),2),5,2) AS HIT_RATIO
,   ROUND(SUM(NUM_COLUMNS_REFERENCED) / SUM(SECTION_EXEC_WITH_COL_REFERENCES)::DECFLOAT) AVG_COLUMNS_REFERENCED
,   MAX(TABLE_SCANS)            AS TABLE_SCANS
,   MAX(NUM_COLUMNS_REFERENCED) AS NUM_COLUMNS_REFERENCED
FROM
(
    SELECT *
    ,   ROW_NUMBER() OVER(PARTITION BY TABSCHEMA,   TABNAME ORDER BY ROWS_READ DESC) AS ROWS_READ_RANK
    FROM
        TABLE(MON_GET_TABLE(DEFAULT, DEFAULT, -2)) AS T
    WHERE
        TAB_TYPE <> 'EXTERNAL_TABLE'
    )
GROUP BY
    TABSCHEMA
,   TABNAME
