--# Copyright IBM Corp. All Rights Reserved.
--# SPDX-License-Identifier: Apache-2.0

/*
 * Example code that stores the dynamic result sets from LOAD when called from ADMIN_CMD 
 */

DROP  TABLE DB_LOAD_RESULT1
@

CREATE TABLE DB_LOAD_RESULT1 (
    ROWS_READ               BIGINT
,   ROWS_SKIPPED            BIGINT
,   ROWS_LOADED             BIGINT
,   ROWS_REJECTED           BIGINT
,   ROWS_DELETED            BIGINT
,   ROWS_COMMITTED          BIGINT
,   ROWS_PARTITIONED        BIGINT
,   NUM_AGENTINFO_ENTRIES   BIGINT
,   MSG_RETRIEVAL           VARCHAR(512)
,   MSG_REMOVAL             VARCHAR(512)
--,   PRIMARY KEY (TABSCHEMA, TABNAME, DATAPARTITIONNAME) ENFORCED
)
@

DROP  TABLE DB_LOAD_RESULT2
@

CREATE TABLE DB_LOAD_RESULT2 (
    DBPARTITIONNUM  SMALLINT NOT NULL
,   SQLCODE         INTEGER
,   TABSTATE        VARCHAR(20)
,   AGENTTYPE       VARCHAR(20)
--,   PRIMARY KEY (TABSCHEMA, TABNAME, DATAPARTITIONNAME) ENFORCED
)
@

BEGIN
    DECLARE SQLSTATE CHAR(5);
    DECLARE V_ROWS_READ             BIGINT;
    DECLARE V_ROWS_SKIPPED          BIGINT;
    DECLARE V_ROWS_LOADED           BIGINT;
    DECLARE V_ROWS_REJECTED         BIGINT;
    DECLARE V_ROWS_DELETED          BIGINT;
    DECLARE V_ROWS_COMMITTED        BIGINT;
    DECLARE V_ROWS_PARTITIONED      BIGINT;
    DECLARE V_NUM_AGENTINFO_ENTRIES BIGINT;
    DECLARE V_MSG_RETRIEVAL         VARCHAR(512);
    DECLARE V_MSG_REMOVAL           VARCHAR(512);
    DECLARE V_DBPARTITIONNUM        SMALLINT;
    DECLARE V_SQLCODE               INTEGER;
    DECLARE V_TABSTATE              VARCHAR(20);
    DECLARE V_AGENTTYPE             VARCHAR(20);
    DECLARE V1 RESULT_SET_LOCATOR   VARYING;
    DECLARE V2 RESULT_SET_LOCATOR   VARYING;
    --
    CALL SYSPROC.ADMIN_CMD('LOAD FROM ''/dev/null'' OF DEL REPLACE INTO PAUL.T'); -- enter your admin comand here
    ASSOCIATE RESULT SET LOCATOR (V1, V2) WITH PROCEDURE SYSPROC.ADMIN_CMD;
    ALLOCATE C1 CURSOR FOR RESULT SET V1;
    ALLOCATE C2 CURSOR FOR RESULT SET V2;       -- If on SMP, comment this line out, and also loop 2
    --
    L1: LOOP
        FETCH C1                        INTO V_ROWS_READ, V_ROWS_SKIPPED, V_ROWS_LOADED, V_ROWS_REJECTED, V_ROWS_DELETED, V_ROWS_COMMITTED, V_ROWS_PARTITIONED, V_NUM_AGENTINFO_ENTRIES, V_MSG_RETRIEVAL, V_MSG_REMOVAL ;
        IF SQLSTATE<>'00000' THEN LEAVE L1; END IF;        
        INSERT INTO DB_LOAD_RESULT1 VALUES ( V_ROWS_READ, V_ROWS_SKIPPED, V_ROWS_LOADED, V_ROWS_REJECTED, V_ROWS_DELETED, V_ROWS_COMMITTED, V_ROWS_PARTITIONED, V_NUM_AGENTINFO_ENTRIES, V_MSG_RETRIEVAL, V_MSG_REMOVAL);
    END LOOP L1;
    CLOSE C1;
    --
    L2: LOOP
        FETCH C2                        INTO V_DBPARTITIONNUM, V_SQLCODE, V_TABSTATE, V_AGENTTYPE ;
        IF SQLSTATE<>'00000' THEN LEAVE L2; END IF;        
        INSERT INTO DB_LOAD_RESULT2 VALUES ( V_DBPARTITIONNUM, V_SQLCODE, V_TABSTATE, V_AGENTTYPE);
    END LOOP L2;
    CLOSE C2;
END
@
 