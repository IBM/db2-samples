--Prep the database for the location demo

-- connect to bludb;

DROP TABLE GEO_TEMP;
DROP TABLE GEO_COUNTY;
DROP TABLE GEO_CUSTOMER;

--------------------------------------
-- Create the SRS needed for the demo.
--------------------------------------

CALL ST_DROP_SRS('SAMPLE_GCS_WGS_1984');
CALL ST_CREATE_SRS('SAMPLE_GCS_WGS_1984', 1005, -400, -400, 1.111948722222222E9,-100000,10000,-100000,10000,'GCS_WGS_1984',NULL, NULL,'GEOGCS[\"GCS_WGS_1984\",DATUM[\"D_WGS_1984\",SPHEROID[\"WGS_1984\",6378137.0,298.257223563]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]]', 'location demo srs');

------------------------
-- Load GEO_COUNTY table
------------------------

-- Load raw data.
CREATE TABLE GEO_TEMP (OBJECTID INTEGER NOT NULL PRIMARY KEY, WKT CLOB, STATEFP VARCHAR(2), COUNTYFP VARCHAR(3), COUNTYNS VARCHAR(8), NAME VARCHAR(100), GEOID VARCHAR(5), NAMELSAD VARCHAR(100), LSAD VARCHAR(2), CLASSFP VARCHAR(2), MTFCC VARCHAR(5), CSAFP VARCHAR(3), CBSAFP VARCHAR(5), METDIVFP VARCHAR(5), FUNCSTAT VARCHAR(1), ALAND DECIMAL(14,0), AWATER DECIMAL(14,0), INTPTLAT VARCHAR(11), INTPTLON VARCHAR(12)) ORGANIZE BY ROW;

-- Adjust the source path and the message path as necessary.
LOAD FROM ../data/county.del OF DEL LOBS FROM ./ MODIFIED BY COLDEL| MESSAGES /tmp/county_load.log INSERT INTO GEO_TEMP(OBJECTID, WKT, STATEFP, COUNTYFP, COUNTYNS, NAME, GEOID, NAMELSAD, LSAD, CLASSFP, MTFCC, CSAFP, CBSAFP, METDIVFP, FUNCSTAT, ALAND, AWATER, INTPTLAT, INTPTLON);

-- Create and load county table.
CREATE TABLE GEO_COUNTY (OBJECTID INTEGER NOT NULL PRIMARY KEY, Shape SYSIBM.ST_MultiPolygon INLINE LENGTH 32300, STATEFP VARCHAR(2), COUNTYFP VARCHAR(3), COUNTYNS VARCHAR(8), NAME VARCHAR(100), GEOID VARCHAR(5), NAMELSAD VARCHAR(100), LSAD VARCHAR(2), CLASSFP VARCHAR(2), MTFCC VARCHAR(5), CSAFP VARCHAR(3), CBSAFP VARCHAR(5), METDIVFP VARCHAR(5), FUNCSTAT VARCHAR(1), ALAND DECIMAL(14,0), AWATER DECIMAL(14,0), INTPTLAT VARCHAR(11), INTPTLON VARCHAR(12),  xmin double generated as (st_minx(shape)),  xmax double generated as (st_maxx(shape)),  ymin double generated as (st_miny(shape)),  ymax double generated as (st_maxy(shape)) ) ORGANIZE BY COLUMN NOT LOGGED INITIALLY;

INSERT INTO GEO_COUNTY (OBJECTID, SHAPE,  STATEFP, COUNTYFP, COUNTYNS, NAME, GEOID, NAMELSAD, LSAD, CLASSFP, MTFCC, CSAFP, CBSAFP, METDIVFP, FUNCSTAT, ALAND, AWATER, INTPTLAT, INTPTLON) ( SELECT OBJECTID, ST_MPolyFromText(WKT, 1005), STATEFP, COUNTYFP, COUNTYNS, NAME, GEOID, NAMELSAD, LSAD, CLASSFP, MTFCC, CSAFP, CBSAFP, METDIVFP, FUNCSTAT, ALAND, AWATER, INTPTLAT, INTPTLON FROM GEO_TEMP);

-- Create a regular index on the boxfilter columns.
CREATE INDEX GEO_COUNTY_BF_IDX ON GEO_COUNTY (xmin, ymin, xmax, ymax);

COMMIT;
DROP TABLE GEO_TEMP;

--------------------------
-- Load GEO_CUSTOMER table
--------------------------
-- Load raw data.
CREATE TABLE GEO_TEMP (OBJECTID INTEGER NOT NULL PRIMARY KEY, WKT VARCHAR(256), NAME VARCHAR(254), INSURANCE_VALUE INTEGER) ORGANIZE BY ROW;
	
-- Adjust the source path and message path as necessary.
LOAD FROM ../data/customer.del OF DEL MODIFIED BY COLDEL| MESSAGES /tmp/customer_load.log INSERT INTO GEO_TEMP(OBJECTID, WKT, NAME, INSURANCE_VALUE);

CREATE TABLE GEO_CUSTOMER (OBJECTID INTEGER NOT NULL PRIMARY KEY, SHAPE SYSIBM.ST_POINT, NAME VARCHAR(254), INSURANCE_VALUE INTEGER,  xmin double generated as (st_minx(shape)),  xmax double generated as (st_maxx(shape)),  ymin double generated as (st_miny(shape)),  ymax double generated as (st_maxy(shape))) ORGANIZE BY ROW NOT LOGGED INITIALLY;
INSERT INTO GEO_CUSTOMER (OBJECTID, SHAPE, NAME, INSURANCE_VALUE) ( SELECT OBJECTID ,ST_POINTFROMTEXT(WKT, 1005), NAME ,INSURANCE_VALUE FROM GEO_TEMP );

-- Create a regular index on the boxfilter columns.
CREATE INDEX GEO_CUSTOMER_BF_IDX ON GEO_CUSTOMER (xmin, ymin, xmax, ymax);

-- Create a regular index on the INSURANCE_VALUE column.
CREATE INDEX GEO_CUSTOMER_insurance_value_idx ON GEO_CUSTOMER(INSURANCE_VALUE);

COMMIT;
DROP TABLE GEO_TEMP;






