################################################
#
# Sample IBM DB2 Policy using Reference Policy syntax
#
################################################
policy_module(db2,1.1.0)

gen_require(`
    type inetd_t;
    type nfs_t;
    type node_t;
    type rshd_t;
    type rsh_port_t;
    type telnetd_devpts_t;
    type remote_login_t;
    type rlogind_devpts_t;
    type rlogind_t;
    type rpm_t;
    type rpm_exec_t;
    type shadow_t;
    type tmpfs_t;
    type xdm_t;
  ')

# The DB2 domains frequently need the same allows, so create an internal
# macro to reduce repetition.

define(`db2_helper_macro',`
  gen_require(`
     type init_t;
  ')

  kernel_get_sysvipc_info($1)                 # Allow processes in domain to run ipcs
  kernel_read_network_state($1)
  kernel_read_kernel_sysctls($1)              # Read generic kernel sysctls
  kernel_sendrecv_unlabeled_packets($1)

  # DB2 uses shared libraries, uses the dynamic loader
  libs_use_shared_libs($1)
  libs_use_ld_so($1)

  # /etc/services entry for ibm-db2 port 523
  corenet_tcp_bind_reserved_port($1)
  corenet_udp_bind_reserved_port($1)

  corenet_tcp_connect_smtp_port($1)
  corenet_tcp_bind_inaddr_any_node($1)
  corenet_udp_bind_inaddr_any_node($1)

  corecmd_exec_bin($1)    # execute command in the callers domain
  corecmd_exec_shell($1)

  unconfined_signull($1)  # can send signull to the unconfined domain
  unconfined_rw_pipes($1)

  files_getattr_tmp_dirs($1)
  files_manage_all_files($1, -shadow_t)
  files_manage_generic_locks($1)
  files_manage_generic_tmp_files($1)
  files_read_etc_files($1)

  miscfiles_read_localization($1)

  db2_exec_db2_shell_scripts($1)

  sysnet_dns_name_resolve($1)

  term_use_generic_ptys($1)

  # Allow execution of DB2 shared libraries, allow
  # loading shared libraries with text relocations
  allow $1 db2_shlib_t:file { execute execmod };
  allow $1 db2_exec_t:file execmod;
  allow $1 nfs_t:file execmod;

  # Access to other processes in the same domain
  allow $1 self:process { fork sigchld sigkill sigstop signull signal ptrace getpgid setpgid getcap setcap setrlimit execmem execstack };

  # Various capabilities
  allow $1 self:capability { chown dac_override setgid setuid ipc_lock ipc_owner sys_rawio sys_ptrace sys_admin sys_resource };

  # Required by the PVP validation test suite
  allow $1 tmpfs_t:filesystem getattr;
  allow $1 xdm_t:shm create_shm_perms;

  # Access file descriptors, pipes and sockets created by processes
  # in the same domain.
  allow $1 self:fd use;
  allow $1 self:fifo_file rw_file_perms;
  allow $1 self:unix_dgram_socket create_socket_perms;
  allow $1 self:unix_stream_socket create_stream_socket_perms;

  # Allow communications with processes running in the same domain
  allow $1 self:unix_dgram_socket sendto;
  allow $1 self:unix_stream_socket connectto;

  # Access SysV IPC objects created by process in the same domain
  allow $1 self:shm create_shm_perms;
  allow $1 self:sem create_sem_perms;
  allow $1 self:msgq create_msgq_perms;
  allow $1 self:msg all_msg_perms;

  # Allow communications with processes running in the unconfined domain
  allow $1 unconfined_t:sem create_sem_perms;
  allow $1 unconfined_t:shm create_shm_perms;
  allow $1 unconfined_t:msgq create_msgq_perms;
  allow $1 unlabeled_t:msgq create_msgq_perms;

  allow $1 unconfined_t:msg all_msg_perms;

  # Allow domain to create and use UDP and TCP sockets
  allow $1 self:udp_socket create_socket_perms;
  allow $1 self:tcp_socket create_stream_socket_perms;

  allow $1 self:netlink_route_socket r_netlink_socket_perms;

  # Allow processes in the domain to "use" /dev/pts/1
  allow $1 remote_login_t:fd use;

  # Allow processes in the domain to read and write to the console
  allow $1 rlogind_devpts_t:chr_file rw_file_perms;

  # Need this to start DB2 from a telnet session
  allow $1 telnetd_devpts_t:chr_file rw_file_perms;


  # Need these for DFP
  allow $1 inetd_t:fd use;
  allow $1 inetd_t:tcp_socket rw_socket_perms;
  allow $1 init_t:fd use;
  allow $1 nfs_t:file {execute execute_no_trans};
  allow $1 node_t:tcp_socket node_bind;
  allow $1 rsh_port_t:tcp_socket {name_connect node_bind};
  allow $1 rshd_t:fd use;
  allow $1 unconfined_t:tcp_socket rw_socket_perms;
  allow $1 unconfined_t:msgq create_msgq_perms;
  allow $1 unconfined_t:msg {send receive};
  allow $1 rshd_t:fifo_file rw_file_perms;
')

#############################
# Private type declarations
#############################
type db2adm_t;           # DB2 engine and admin programs run in the db2adm_t domain.
type db2fm_t;            # DB2 fault monitor runs as a daemon in its own domain.
type db2_t;              # Other DB2 programs (CLP, DAS, CC, FS) run in the db2_t domain.

type db2adm_exec_t;      # Execute file of this type to transition to the db2adm_t domain
type db2fm_exec_t;       # Execute file of this type to transition to the db2fm_t domain
type db2_exec_t;         # Execute file of this type to transition to the db2_t domain

type db2_data_t;         # DB2 data files (containers, catalogs, etc) and the directories they live in
type db2_diag_t;         # sqllib/db2dump directory and the files therein
type db2_file_t;         # Catch-all for DB2 config, bnd, diag, msg, etc. files and directories
type db2_java_t;         # DB2 java directory and files
type db2_shlib_t;        # DB2 shared libraries
type db2_shell_script_t; # e.g. dasprofile
type db2_var_t;          # The /var/db2 directory and files therein

# Creates a domain for processes started by init, in this case db2fm
init_daemon_domain(db2fm_t, db2fm_exec_t)

# Domain declarations for the following types
domain_type(db2adm_t)
domain_type(db2_t)

# File type declarations
files_type(db2_data_t)
files_type(db2_diag_t)
files_type(db2_file_t)
files_type(db2_java_t)
files_type(db2_shlib_t)
files_type(db2_shell_script_t)
files_type(db2_var_t)

# Make usable for lock files
files_lock_file(db2_file_t)

# db2_adm_exec_t and db2_exec_t are entry points to their respective domains
domain_entry_file(db2adm_t, db2adm_exec_t)
domain_entry_file(db2_t, db2_exec_t)

# Automatic transitions
domain_auto_trans(unconfined_t, db2adm_exec_t, db2adm_t)
domain_auto_trans(unconfined_t, db2_exec_t, db2_t)
domain_auto_trans(db2_t, db2adm_exec_t, db2adm_t)
domain_auto_trans(db2adm_t, db2_exec_t, db2_t)
domain_auto_trans(db2adm_t, rpm_exec_t, rpm_t)

# Suppress domain transitions
allow db2adm_t db2_exec_t:file execute_no_trans;
allow db2adm_t db2adm_exec_t:file execute_no_trans;

# Who else can execute db2 shell scripts
db2_exec_db2_shell_scripts(bin_t)

##############################################################

db2_helper_macro(db2_t)
db2_helper_macro(db2adm_t)

##############################################################
#
# Unique permissions for db2adm_t
#
##############################################################

kernel_sendrecv_unlabeled_association(db2adm_t)
kernel_rw_kernel_sysctl(db2adm_t)   # the other domains don't need to write to sysctl
fs_getattr_xattr_fs(db2adm_t)       # how full is the filesystem?
auth_read_shadow(db2adm_t)          # db2sysc needs to be able to read /etc/shadow

allow db2adm_t db2_t:fd use;
allow db2adm_t db2_t:fifo_file rw_file_perms;
allow db2adm_t db2_t:process sigchld;

##############################################################
#
# Unique permissions for db2_t
#
##############################################################

allow db2_t db2_exec_t:file execute_no_trans;

allow db2_t db2adm_t:fd use;
allow db2_t db2adm_t:sem create_sem_perms;    # need rw, +destroy for ipclean
allow db2_t db2adm_t:shm create_shm_perms;    # need rw, +destroy for ipclean
allow db2_t db2adm_t:msgq create_msgq_perms;  # need rw, +destroy for ipclean
allow db2_t db2adm_t:msg {send receive};
allow db2_t db2adm_t:process sigchld;
allow db2_t db2adm_t:unix_stream_socket all_unix_stream_socket_perms;

##############################################################
#
# These rules accomodate text relocation in Java and DB2 shared libraries.
#
##############################################################
allow unconfined_t db2_java_t:file execmod;
allow unconfined_t db2_shlib_t:file execmod;
allow unconfined_t ld_so_t:file execmod;
allow unconfined_t lib_t:file execmod;
allow unconfined_t self:process execheap;

##############################################################
#
# db2fm (the fault monitor) needs these, else db2fmd will fail
# to start at bootup (db2fmd runs in the db2_t domain).
#
##############################################################
allow db2_t init_t:fd use;
allow db2_t init_t:fifo_file rw_file_perms;

# Because the home directory is labeled db2_data_t, rlogin
# needs to be allowed to search for .rhosts
allow rlogind_t db2_data_t:dir search;

