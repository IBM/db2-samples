package com.ibm.db2.tools.repl.publication.support;
import java.io.*;

import org.xml.sax.*;
import org.xml.sax.helpers.DefaultHandler;

import javax.xml.parsers.SAXParserFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.parsers.SAXParser;
import com.ibm.db2.tools.repl.publication.*;

/**
 * The PublicationParser class is a small class that holds the xml parser, and accepts documents
 * to be parsed by that parser.  Each document will generate one Msg subclass, which can
 * be retreived through this class.
 *
 * @author tjacopi
 *
 */
public class PublicationParser   {

    protected SAXParser parser = null;
    protected PublicationHandler pubHandler = null;


    /** Create a parser for the xml publication documents.  The parsing of the documents will
     *  generate Msg objects.
     */
    public PublicationParser() throws ParserConfigurationException, SAXException  {
        SAXParserFactory factory = SAXParserFactory.newInstance();
        factory.setValidating( false );     // for now
        parser = factory.newSAXParser();
        pubHandler = new PublicationHandler();
    }

    /** This will parse the input xml document and return the corresponding Msg subclass
     *  generated by the document.
     *  @param  inputXml  The input xml document.
     *  @return Msg     The msg subclass defined by the document.
     */
    public Msg  parse( String inputXml ) throws SAXException, IOException  {
      Reader ir = new StringReader(inputXml);
      InputSource is = new InputSource(ir);

      parser.parse( is, pubHandler );

      return pubHandler.getMsg();
    }
}
